[{"D:\\webstorm\\to-do-app\\src\\index.js":"1","D:\\webstorm\\to-do-app\\src\\App.js":"2","D:\\webstorm\\to-do-app\\src\\reportWebVitals.js":"3","D:\\webstorm\\to-do-app\\src\\ToDoList\\MainPage.js":"4","D:\\webstorm\\to-do-app\\src\\ToDoList\\ToDoDiv.js":"5","D:\\webstorm\\to-do-app\\src\\ToDoList\\ToDoList.js":"6"},{"size":517,"mtime":1610280175104,"results":"7","hashOfConfig":"8"},{"size":215,"mtime":1610280175100,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1610280175107,"results":"10","hashOfConfig":"8"},{"size":2000,"mtime":1610280175101,"results":"11","hashOfConfig":"8"},{"size":2590,"mtime":1610280175102,"results":"12","hashOfConfig":"8"},{"size":661,"mtime":1610280175103,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"jt8bxh",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\webstorm\\to-do-app\\src\\index.js",[],["30","31"],"D:\\webstorm\\to-do-app\\src\\App.js",[],"D:\\webstorm\\to-do-app\\src\\reportWebVitals.js",[],"D:\\webstorm\\to-do-app\\src\\ToDoList\\MainPage.js",["32","33"],"import React, {useState} from 'react';\r\nimport './MainPage.css';\r\nimport ToDoDiv from \"./ToDoDiv\";\r\nimport ToDoList from \"./ToDoList\";\r\nconst MainPage=()=>{\r\n    const[listName,setListName]=useState(\"\");\r\n    const[toDoDiv,setToDoDiv]=useState([]);\r\n\r\n    const listEvent=(event)=>{\r\n        setListName(event.target.value)\r\n    };\r\n\r\n    const listAdd=()=>{\r\n        setToDoDiv((oldItems)=>{\r\n            if(listName.length===0) {\r\n                alert(\"Please Enter Valid List Name\");\r\n                return [...oldItems];\r\n            }\r\n            else\r\n                return [...oldItems,listName];\r\n        });\r\n        setListName(\"\");\r\n    }\r\n\r\n    const pressEnterHandler=(k)=>{\r\n        if(k.keyCode === 13){\r\n            {listAdd()}\r\n        }\r\n    }\r\n    const deleteList=(i)=>{\r\n        setToDoDiv((oldItems)=>{\r\n            return oldItems.filter((arrElem,index)=>{\r\n                return index!==i;\r\n            });\r\n        });\r\n    };\r\n    return(\r\n            <div className=\"main_page\" >\r\n                <div className=\"add_list\">\r\n                    <input type=\"text\"\r\n                           placeholder=\"Enter List Name\"\r\n                           className=\"input_list\"\r\n                           value={listName}\r\n                           onChange={listEvent}\r\n                           onKeyDown={pressEnterHandler}\r\n                    />\r\n                    <button className=\"add_list_button\" onClick={listAdd}>Add</button>\r\n\r\n                </div >\r\n                <div className=\"to_do_divs\">\r\n                    {toDoDiv.map( (itemVal,index)=> (\r\n                            <ToDoDiv\r\n                                key={index}\r\n                                value={itemVal}\r\n                                cross={index}\r\n                                onSelectCross={deleteList}\r\n                            />\r\n                        )\r\n                    )}\r\n                </div>\r\n            </div>\r\n    );\r\n};\r\nexport default MainPage;","D:\\webstorm\\to-do-app\\src\\ToDoList\\ToDoDiv.js",["34","35"],"import React , {useState}from 'react';\r\nimport ToDoList from \"./ToDoList\";\r\nimport './ToDoDiv.css';\r\nimport MainPage from \"./MainPage\";\r\nconst ToDoDiv=(props)=>{\r\n    const[inputList,setInputList]=useState(\"\");\r\n    const[items,setItems]=useState([]);\r\n\r\n    const itemEvent=(event)=>{\r\n        setInputList(event.target.value)\r\n        /*console.log(event.target.value);*/\r\n    };\r\n\r\n    const itemAdd=()=>{\r\n        setItems((oldItems)=>{\r\n            if(inputList.length===0) {\r\n                alert(\"Please Enter Valid Item\");\r\n                return [...oldItems];\r\n            }\r\n            else\r\n                return [...oldItems,{title: inputList, status: false}];\r\n        });\r\n        setInputList(\"\");\r\n    };\r\n\r\n    const deleteItem=(deleted)=>{\r\n        setItems((oldItems)=>{\r\n            return oldItems.filter((arrElem,index)=>{\r\n                return index!==deleted;\r\n            });\r\n        });\r\n    };\r\n\r\n    const strikeItem=(tick)=>{\r\n        setItems((item) => {\r\n            return item.filter((a, index) => {\r\n                if(index === tick) {\r\n                    if(item[index].status===false)\r\n                        return item[index].status=true;\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n    const pressEnterHandler=(k)=>{\r\n        if(k.keyCode === 13){\r\n            {itemAdd()}\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"to_do_div\">\r\n            <i className=\"fa fa-times\"\r\n               onClick={()=>{\r\n                   props.onSelectCross(props.cross);\r\n               }}\r\n            />\r\n            <h1><span className=\"heading\"> {props.value}</span></h1>\r\n            <br/>\r\n            <input type=\"text\" placeholder=\"Add your items\"\r\n                   className=\"input_item\"\r\n                   value={inputList}\r\n                   onChange={itemEvent}\r\n                   onKeyDown={pressEnterHandler}\r\n            />\r\n            <button onClick={itemAdd} className=\"add_item_button\">+</button>\r\n            <ol>\r\n                {items.map( (itemVal,index)=> (\r\n                        <ToDoList\r\n                            tick={index}\r\n                            status={itemVal.status}\r\n                            deleted={index}\r\n                            key={index}\r\n                            val={itemVal.title}\r\n                            onSelect={deleteItem}\r\n                            onSelectTick={strikeItem}\r\n                        />\r\n                    )\r\n                )}\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\nexport default ToDoDiv;",["36","37"],"D:\\webstorm\\to-do-app\\src\\ToDoList\\ToDoList.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":27,"column":13,"nodeType":"48","messageId":"49","endLine":27,"endColumn":24},{"ruleId":"42","severity":1,"message":"50","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":47,"column":13,"nodeType":"48","messageId":"49","endLine":47,"endColumn":24},{"ruleId":"38","replacedBy":"51"},{"ruleId":"40","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'ToDoList' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'MainPage' is defined but never used.",["53"],["54"],"no-global-assign","no-unsafe-negation"]